# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool: 
  name: RaspberryPi
  vmImage: 'Ubuntu-20.04'

variables:
  buildConfiguration: 'Release'

stages:
- stage: PULL_REQUESTS_PIPELINE
  jobs:
  - job:
    steps:
    - task: SonarCloudPrepare@1
      displayName: SonarCloudPrepare
      inputs:
        SonarCloud: 'Sonar Cloud'
        organization: 'radoslawtaborski-github'
        scannerMode: 'MSBuild'
        projectKey: 'RadoslawTaborski_SimpleAPISolution'
        projectName: 'SimpleAPI'
        extraProperties: |
          sonar.cs.opencover.reportsPaths=$(Agent.TempDirectory)/**/coverage.opencover.xml
    - task: DotNetCoreCLI@2  
      displayName: 'DotnetRestore'  
      inputs:  
        command: restore  
        projects: |
          **/*/*.csproj
        includeNuGetOrg: true  
    - task: DotNetCoreCLI@2
      displayName: 'DotnetBuild$(buildConfiguration)'
      inputs:
        command: 'build'
        projects: |
          **/*/*.csproj
        arguments: '--configuration $(buildConfiguration)'
    - task: DotNetCoreCLI@2
      displayName: 'DotnetTest$(buildConfiguration)'
      inputs:
        command: test
        projects: '**/*Test/*.csproj'
        publishTestResults: true
        arguments: '--configuration $(buildConfiguration) --settings coverlet.runsettings.xml'
    - bash: |
        export DOTNET_ROOT=$(dirname $(realpath $(which dotnet)))
        $HOME/.dotnet/tools/reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.opencover.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"Cobertura"
      displayName: 'CodeCoverageReportCreation'  
    - task: PublishCodeCoverageResults@1
      displayName: 'CodeCoveragePublish'
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '$(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml'
    - task: SonarCloudAnalyze@1
      displayName: SonarCloudAnalyze
    - task: SonarCloudPublish@1
      displayName: SonarCloudPublish
      inputs:
        pollingTimeoutSec: '300'